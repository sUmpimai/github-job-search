{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ped/Documents/github-job-search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n\n  const getData = () => fetch(\"https://jobs.github.com/positions.json?description=python\").then(res => res.json());\n\n  useEffect(() => {\n    getData().then(data => setData(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [item.company, \" \", item.type]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this); // useEffect(() => {\n  //   fetch(\"https://jobs.github.com/positions.json?description=python\")\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //         setIsLoaded(true);\n  //         setItems(result);\n  //       },\n  //       (error) => {\n  //         setIsLoaded(true);\n  //         setError(error);\n  //       }\n  //     )\n  // }, [])\n  // // if (error) {\n  // //   return <div>Error: {error.message}</div>;\n  // // } \n  // // if (!isLoaded) {\n  // //   return <div>Loading...</div>;\n  // // }\n  //   return (\n  //     <ul>\n  //       {items.map(item => (\n  //         <li key={item.id}>\n  //           {item.company} {item.type}\n  //         </li>\n  //       ))}\n  //     </ul>\n  //   );\n}\n\n_s(App, \"FZxwUA4xt5+cidrm7Dl+G5KOk6M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ped/Documents/github-job-search/src/App.js"],"names":["React","useState","useEffect","App","error","setError","isLoaded","setIsLoaded","data","setData","getData","fetch","then","res","json","map","item","company","type","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMS,OAAO,GAAG,MAChBC,KAAK,CAAC,2DAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,CADA;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,GAAGE,IAAV,CAAgBJ,IAAD,IAAUC,OAAO,CAACD,IAAD,CAAhC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACM;AAAA,cACGA,IAAI,CAACO,GAAL,CAASC,IAAI,iBACZ;AAAA,iBACGA,IAAI,CAACC,OADR,OACkBD,IAAI,CAACE,IADvB;AAAA,OAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADN,CAZa,CAuBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGD;;GA5DQhB,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  const getData = () => \n  fetch(\"https://jobs.github.com/positions.json?description=python\")\n  .then(res => res.json())\n\n  useEffect(() => {\n    getData().then((data) => setData(data))\n  }, []);\n\n  return (\n        <ul>\n          {data.map(item => (\n            <li key={item.id}>\n              {item.company} {item.type}\n            </li>\n          ))}\n        </ul>\n      );\n\n\n  // useEffect(() => {\n  //   fetch(\"https://jobs.github.com/positions.json?description=python\")\n  //     .then(res => res.json())\n  //     .then(\n  //       (result) => {\n  //         setIsLoaded(true);\n  //         setItems(result);\n  //       },\n \n  //       (error) => {\n  //         setIsLoaded(true);\n  //         setError(error);\n  //       }\n  //     )\n  // }, [])\n  \n\n  \n  // // if (error) {\n  // //   return <div>Error: {error.message}</div>;\n  // // } \n\n  // // if (!isLoaded) {\n  // //   return <div>Loading...</div>;\n  // // }\n  \n  //   return (\n  //     <ul>\n  //       {items.map(item => (\n  //         <li key={item.id}>\n  //           {item.company} {item.type}\n  //         </li>\n  //       ))}\n  //     </ul>\n  //   );\n  \n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}