{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ped/Documents/github-job-search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n\n  const fetchData = query => fetch(\"/positions.json?description=$query\").then(res => res.json());\n\n  useEffect(() => {\n    fetchData().then(result => {\n      setIsLoaded(true);\n      setData(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  onSearch = e => {\n    e.preventDefault();\n    this.fetchData(this.state.searchValue);\n    this.resetInput();\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [item.company, \" \", item.type]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"FZxwUA4xt5+cidrm7Dl+G5KOk6M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ped/Documents/github-job-search/src/App.js"],"names":["React","useState","useEffect","App","error","setError","isLoaded","setIsLoaded","data","setData","fetchData","query","fetch","then","res","json","result","onSearch","e","preventDefault","state","searchValue","resetInput","message","map","item","company","type","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMS,SAAS,GAAIC,KAAD,IAClBC,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,CADA;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,GAAGG,IAAZ,CACSG,MAAD,IAAY;AACVT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,OAAO,CAACO,MAAD,CAAP;AACD,KAJT,EAMSZ,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KATT;AAWD,GAZQ,EAYN,EAZM,CAAT;;AAcCa,EAAAA,QAAQ,GAAIC,CAAD,IAAO;AACbA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKT,SAAL,CAAe,KAAKU,KAAL,CAAWC,WAA1B;AACA,SAAKC,UAAL;AACH,GAJF;;AAMA,MAAIlB,KAAJ,EAAW;AACV,wBAAO;AAAA,4BAAaA,KAAK,CAACmB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACjB,QAAL,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACM;AAAA,cACGE,IAAI,CAACgB,GAAL,CAASC,IAAI,iBACZ;AAAA,iBACGA,IAAI,CAACC,OADR,OACkBD,IAAI,CAACE,IADvB;AAAA,OAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADN;AASD;;GA7CQzB,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  const fetchData = (query) => \n  fetch(\"/positions.json?description=$query\")\n  .then(res => res.json())\n\n  useEffect(() => {\n    fetchData().then(\n            (result) => {\n              setIsLoaded(true);\n              setData(result);\n            },\n     \n            (error) => {\n              setIsLoaded(true);\n              setError(error);\n            }\n          )\n  }, []);\n\n   onSearch = (e) => {\n        e.preventDefault();\n        this.fetchData(this.state.searchValue)\n        this.resetInput()\n    }\n\n   if (error) {\n    return <div>Error: {error.message}</div>;\n  } \n\n  if (!isLoaded) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n        <ul>\n          {data.map(item => (\n            <li key={item.id}>\n              {item.company} {item.type}\n            </li>\n          ))}\n        </ul>\n      );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}