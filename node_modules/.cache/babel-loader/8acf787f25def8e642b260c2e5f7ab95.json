{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ped/Documents/github-job-search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]); //const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    fetch(\"https://jobs.github.com/positions.json?description=python\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []); // if (error) {\n  //   return <div>Error: {error.message}</div>;\n  // } \n  // if (!isLoaded) {\n  //   return <div>Loading...</div>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [item.company, \" \", item.type]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"FZxwUA4xt5+cidrm7Dl+G5KOk6M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ped/Documents/github-job-search/src/App.js"],"names":["React","useState","useEffect","App","error","setError","isLoaded","setIsLoaded","data","setData","fetch","then","res","json","result","setItems","items","map","item","company","type","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAHa,CAIb;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,2DAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,KANL,EAQKV,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAXL;AAaD,GAdQ,EAcN,EAdM,CAAT,CANa,CAuBb;AACA;AACA;AAEA;AACA;AACA;;AAEE,sBACE;AAAA,cACGY,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb;AAAA,iBACGA,IAAI,CAACC,OADR,OACkBD,IAAI,CAACE,IADvB;AAAA,OAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWH;;GA1CQlB,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [data, setData] = useState([]);\n  //const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    fetch(\"https://jobs.github.com/positions.json?description=python\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n \n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [])\n\n  \n  // if (error) {\n  //   return <div>Error: {error.message}</div>;\n  // } \n\n  // if (!isLoaded) {\n  //   return <div>Loading...</div>;\n  // }\n  \n    return (\n      <ul>\n        {items.map(item => (\n          <li key={item.id}>\n            {item.company} {item.type}\n          </li>\n        ))}\n      </ul>\n    );\n  \n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}